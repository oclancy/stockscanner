//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockScanner.UI.StockScannerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Market", Namespace="http://schemas.datacontract.org/2004/07/StockService.Core")]
    [System.SerializableAttribute()]
    public partial class Market : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MarketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarketId {
            get {
                return this.MarketIdField;
            }
            set {
                if ((this.MarketIdField.Equals(value) != true)) {
                    this.MarketIdField = value;
                    this.RaisePropertyChanged("MarketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/StockService.Core")]
    [System.SerializableAttribute()]
    public partial class Company : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockScanner.UI.StockScannerService.Industry IndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockScanner.UI.StockScannerService.Industry Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Industry", Namespace="http://schemas.datacontract.org/2004/07/StockService.Core")]
    [System.SerializableAttribute()]
    public partial class Industry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndustryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockScanner.UI.StockScannerService.Sector SectorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndustryId {
            get {
                return this.IndustryIdField;
            }
            set {
                if ((this.IndustryIdField.Equals(value) != true)) {
                    this.IndustryIdField = value;
                    this.RaisePropertyChanged("IndustryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockScanner.UI.StockScannerService.Sector Sector {
            get {
                return this.SectorField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorField, value) != true)) {
                    this.SectorField = value;
                    this.RaisePropertyChanged("Sector");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sector", Namespace="http://schemas.datacontract.org/2004/07/StockService.Core", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Sector : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockScanner.UI.StockScannerService.Industry[] IndustriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockScanner.UI.StockScannerService.Market MarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SectorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockScanner.UI.StockScannerService.Industry[] Industries {
            get {
                return this.IndustriesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustriesField, value) != true)) {
                    this.IndustriesField = value;
                    this.RaisePropertyChanged("Industries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockScanner.UI.StockScannerService.Market Market {
            get {
                return this.MarketField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketField, value) != true)) {
                    this.MarketField = value;
                    this.RaisePropertyChanged("Market");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SectorId {
            get {
                return this.SectorIdField;
            }
            set {
                if ((this.SectorIdField.Equals(value) != true)) {
                    this.SectorIdField = value;
                    this.RaisePropertyChanged("SectorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculatedData", Namespace="http://schemas.datacontract.org/2004/07/StockService.Core")]
    [System.SerializableAttribute()]
    public partial class CalculatedData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceSalesRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SmartPEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PriceSalesRatio {
            get {
                return this.PriceSalesRatioField;
            }
            set {
                if ((this.PriceSalesRatioField.Equals(value) != true)) {
                    this.PriceSalesRatioField = value;
                    this.RaisePropertyChanged("PriceSalesRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SmartPE {
            get {
                return this.SmartPEField;
            }
            set {
                if ((this.SmartPEField.Equals(value) != true)) {
                    this.SmartPEField = value;
                    this.RaisePropertyChanged("SmartPE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockQuote", Namespace="http://schemas.datacontract.org/2004/07/StockService.Core")]
    [System.SerializableAttribute()]
    public partial class StockQuote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AverageDailyVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BookValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ChangeFromTwoHundredDayMovingAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ChangeFromYearHighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ChangeFromYearLowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ChangeInPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockScanner.UI.StockScannerService.Company CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DailyHighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DailyLowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DividendPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DividendShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EarningsShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EbitdaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EpsEstimateCurrentYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EpsEstimateNextQuarterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EpsEstimateNextYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExDividendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FiftyDayMovingAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastTradeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LastTradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MarketCapitalizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> OneYearPriceTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> OpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PeRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PegRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PercentChangeFromFiftyDayMovingAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PercentChangeFromTwoHundredDayMovingAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PercentChangeFromYearHighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PercentChangeFromYearLowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PreviousCloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceBookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceEpsEstimateCurrentYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceEpsEstimateNextYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ShortRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockExchangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TwoHunderedDayMovingAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> YearlyHighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> YearlyLowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Ask {
            get {
                return this.AskField;
            }
            set {
                if ((this.AskField.Equals(value) != true)) {
                    this.AskField = value;
                    this.RaisePropertyChanged("Ask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AverageDailyVolume {
            get {
                return this.AverageDailyVolumeField;
            }
            set {
                if ((this.AverageDailyVolumeField.Equals(value) != true)) {
                    this.AverageDailyVolumeField = value;
                    this.RaisePropertyChanged("AverageDailyVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Bid {
            get {
                return this.BidField;
            }
            set {
                if ((this.BidField.Equals(value) != true)) {
                    this.BidField = value;
                    this.RaisePropertyChanged("Bid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BookValue {
            get {
                return this.BookValueField;
            }
            set {
                if ((this.BookValueField.Equals(value) != true)) {
                    this.BookValueField = value;
                    this.RaisePropertyChanged("BookValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Change {
            get {
                return this.ChangeField;
            }
            set {
                if ((this.ChangeField.Equals(value) != true)) {
                    this.ChangeField = value;
                    this.RaisePropertyChanged("Change");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ChangeFromTwoHundredDayMovingAverage {
            get {
                return this.ChangeFromTwoHundredDayMovingAverageField;
            }
            set {
                if ((this.ChangeFromTwoHundredDayMovingAverageField.Equals(value) != true)) {
                    this.ChangeFromTwoHundredDayMovingAverageField = value;
                    this.RaisePropertyChanged("ChangeFromTwoHundredDayMovingAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ChangeFromYearHigh {
            get {
                return this.ChangeFromYearHighField;
            }
            set {
                if ((this.ChangeFromYearHighField.Equals(value) != true)) {
                    this.ChangeFromYearHighField = value;
                    this.RaisePropertyChanged("ChangeFromYearHigh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ChangeFromYearLow {
            get {
                return this.ChangeFromYearLowField;
            }
            set {
                if ((this.ChangeFromYearLowField.Equals(value) != true)) {
                    this.ChangeFromYearLowField = value;
                    this.RaisePropertyChanged("ChangeFromYearLow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ChangeInPercent {
            get {
                return this.ChangeInPercentField;
            }
            set {
                if ((this.ChangeInPercentField.Equals(value) != true)) {
                    this.ChangeInPercentField = value;
                    this.RaisePropertyChanged("ChangeInPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockScanner.UI.StockScannerService.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DailyHigh {
            get {
                return this.DailyHighField;
            }
            set {
                if ((this.DailyHighField.Equals(value) != true)) {
                    this.DailyHighField = value;
                    this.RaisePropertyChanged("DailyHigh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DailyLow {
            get {
                return this.DailyLowField;
            }
            set {
                if ((this.DailyLowField.Equals(value) != true)) {
                    this.DailyLowField = value;
                    this.RaisePropertyChanged("DailyLow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DividendPayDate {
            get {
                return this.DividendPayDateField;
            }
            set {
                if ((this.DividendPayDateField.Equals(value) != true)) {
                    this.DividendPayDateField = value;
                    this.RaisePropertyChanged("DividendPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DividendShare {
            get {
                return this.DividendShareField;
            }
            set {
                if ((this.DividendShareField.Equals(value) != true)) {
                    this.DividendShareField = value;
                    this.RaisePropertyChanged("DividendShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EarningsShare {
            get {
                return this.EarningsShareField;
            }
            set {
                if ((this.EarningsShareField.Equals(value) != true)) {
                    this.EarningsShareField = value;
                    this.RaisePropertyChanged("EarningsShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Ebitda {
            get {
                return this.EbitdaField;
            }
            set {
                if ((this.EbitdaField.Equals(value) != true)) {
                    this.EbitdaField = value;
                    this.RaisePropertyChanged("Ebitda");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EpsEstimateCurrentYear {
            get {
                return this.EpsEstimateCurrentYearField;
            }
            set {
                if ((this.EpsEstimateCurrentYearField.Equals(value) != true)) {
                    this.EpsEstimateCurrentYearField = value;
                    this.RaisePropertyChanged("EpsEstimateCurrentYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EpsEstimateNextQuarter {
            get {
                return this.EpsEstimateNextQuarterField;
            }
            set {
                if ((this.EpsEstimateNextQuarterField.Equals(value) != true)) {
                    this.EpsEstimateNextQuarterField = value;
                    this.RaisePropertyChanged("EpsEstimateNextQuarter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EpsEstimateNextYear {
            get {
                return this.EpsEstimateNextYearField;
            }
            set {
                if ((this.EpsEstimateNextYearField.Equals(value) != true)) {
                    this.EpsEstimateNextYearField = value;
                    this.RaisePropertyChanged("EpsEstimateNextYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExDividendDate {
            get {
                return this.ExDividendDateField;
            }
            set {
                if ((this.ExDividendDateField.Equals(value) != true)) {
                    this.ExDividendDateField = value;
                    this.RaisePropertyChanged("ExDividendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FiftyDayMovingAverage {
            get {
                return this.FiftyDayMovingAverageField;
            }
            set {
                if ((this.FiftyDayMovingAverageField.Equals(value) != true)) {
                    this.FiftyDayMovingAverageField = value;
                    this.RaisePropertyChanged("FiftyDayMovingAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastTradeDate {
            get {
                return this.LastTradeDateField;
            }
            set {
                if ((this.LastTradeDateField.Equals(value) != true)) {
                    this.LastTradeDateField = value;
                    this.RaisePropertyChanged("LastTradeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LastTradePrice {
            get {
                return this.LastTradePriceField;
            }
            set {
                if ((this.LastTradePriceField.Equals(value) != true)) {
                    this.LastTradePriceField = value;
                    this.RaisePropertyChanged("LastTradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MarketCapitalization {
            get {
                return this.MarketCapitalizationField;
            }
            set {
                if ((this.MarketCapitalizationField.Equals(value) != true)) {
                    this.MarketCapitalizationField = value;
                    this.RaisePropertyChanged("MarketCapitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OneYearPriceTarget {
            get {
                return this.OneYearPriceTargetField;
            }
            set {
                if ((this.OneYearPriceTargetField.Equals(value) != true)) {
                    this.OneYearPriceTargetField = value;
                    this.RaisePropertyChanged("OneYearPriceTarget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Open {
            get {
                return this.OpenField;
            }
            set {
                if ((this.OpenField.Equals(value) != true)) {
                    this.OpenField = value;
                    this.RaisePropertyChanged("Open");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PeRatio {
            get {
                return this.PeRatioField;
            }
            set {
                if ((this.PeRatioField.Equals(value) != true)) {
                    this.PeRatioField = value;
                    this.RaisePropertyChanged("PeRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PegRatio {
            get {
                return this.PegRatioField;
            }
            set {
                if ((this.PegRatioField.Equals(value) != true)) {
                    this.PegRatioField = value;
                    this.RaisePropertyChanged("PegRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PercentChangeFromFiftyDayMovingAverage {
            get {
                return this.PercentChangeFromFiftyDayMovingAverageField;
            }
            set {
                if ((this.PercentChangeFromFiftyDayMovingAverageField.Equals(value) != true)) {
                    this.PercentChangeFromFiftyDayMovingAverageField = value;
                    this.RaisePropertyChanged("PercentChangeFromFiftyDayMovingAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PercentChangeFromTwoHundredDayMovingAverage {
            get {
                return this.PercentChangeFromTwoHundredDayMovingAverageField;
            }
            set {
                if ((this.PercentChangeFromTwoHundredDayMovingAverageField.Equals(value) != true)) {
                    this.PercentChangeFromTwoHundredDayMovingAverageField = value;
                    this.RaisePropertyChanged("PercentChangeFromTwoHundredDayMovingAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PercentChangeFromYearHigh {
            get {
                return this.PercentChangeFromYearHighField;
            }
            set {
                if ((this.PercentChangeFromYearHighField.Equals(value) != true)) {
                    this.PercentChangeFromYearHighField = value;
                    this.RaisePropertyChanged("PercentChangeFromYearHigh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PercentChangeFromYearLow {
            get {
                return this.PercentChangeFromYearLowField;
            }
            set {
                if ((this.PercentChangeFromYearLowField.Equals(value) != true)) {
                    this.PercentChangeFromYearLowField = value;
                    this.RaisePropertyChanged("PercentChangeFromYearLow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PreviousClose {
            get {
                return this.PreviousCloseField;
            }
            set {
                if ((this.PreviousCloseField.Equals(value) != true)) {
                    this.PreviousCloseField = value;
                    this.RaisePropertyChanged("PreviousClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceBook {
            get {
                return this.PriceBookField;
            }
            set {
                if ((this.PriceBookField.Equals(value) != true)) {
                    this.PriceBookField = value;
                    this.RaisePropertyChanged("PriceBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceEpsEstimateCurrentYear {
            get {
                return this.PriceEpsEstimateCurrentYearField;
            }
            set {
                if ((this.PriceEpsEstimateCurrentYearField.Equals(value) != true)) {
                    this.PriceEpsEstimateCurrentYearField = value;
                    this.RaisePropertyChanged("PriceEpsEstimateCurrentYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceEpsEstimateNextYear {
            get {
                return this.PriceEpsEstimateNextYearField;
            }
            set {
                if ((this.PriceEpsEstimateNextYearField.Equals(value) != true)) {
                    this.PriceEpsEstimateNextYearField = value;
                    this.RaisePropertyChanged("PriceEpsEstimateNextYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceSales {
            get {
                return this.PriceSalesField;
            }
            set {
                if ((this.PriceSalesField.Equals(value) != true)) {
                    this.PriceSalesField = value;
                    this.RaisePropertyChanged("PriceSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ShortRatio {
            get {
                return this.ShortRatioField;
            }
            set {
                if ((this.ShortRatioField.Equals(value) != true)) {
                    this.ShortRatioField = value;
                    this.RaisePropertyChanged("ShortRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockExchange {
            get {
                return this.StockExchangeField;
            }
            set {
                if ((object.ReferenceEquals(this.StockExchangeField, value) != true)) {
                    this.StockExchangeField = value;
                    this.RaisePropertyChanged("StockExchange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TwoHunderedDayMovingAverage {
            get {
                return this.TwoHunderedDayMovingAverageField;
            }
            set {
                if ((this.TwoHunderedDayMovingAverageField.Equals(value) != true)) {
                    this.TwoHunderedDayMovingAverageField = value;
                    this.RaisePropertyChanged("TwoHunderedDayMovingAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> YearlyHigh {
            get {
                return this.YearlyHighField;
            }
            set {
                if ((this.YearlyHighField.Equals(value) != true)) {
                    this.YearlyHighField = value;
                    this.RaisePropertyChanged("YearlyHigh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> YearlyLow {
            get {
                return this.YearlyLowField;
            }
            set {
                if ((this.YearlyLowField.Equals(value) != true)) {
                    this.YearlyLowField = value;
                    this.RaisePropertyChanged("YearlyLow");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyStatistics", Namespace="http://schemas.datacontract.org/2004/07/StockService.Core")]
    [System.SerializableAttribute()]
    public partial class CompanyStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BookValuePerShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockScanner.UI.StockScannerService.Company CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CurrentRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DilutedEPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EBITDAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EnterpriseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EnterpriseValueToEBITDARatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EnterpriseValueToRevenueRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ForwardPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GrossProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LeveredFreeCashFlowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MarketCapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> NetIncomeAvltoCommonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> OperatingCashFlowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> OperatingMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PEGRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceBookRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceSalesRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ProfitMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> QtrlyEarningsGrowthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> QtrlyRevenueGrowthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ReturnOnAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ReturnOnEquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RevenuePerShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> StatisticsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCashPerShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalDebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalDebtToEquityRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TrailingAnnualDividendYieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TrailingPEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BookValuePerShare {
            get {
                return this.BookValuePerShareField;
            }
            set {
                if ((this.BookValuePerShareField.Equals(value) != true)) {
                    this.BookValuePerShareField = value;
                    this.RaisePropertyChanged("BookValuePerShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockScanner.UI.StockScannerService.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CurrentRatio {
            get {
                return this.CurrentRatioField;
            }
            set {
                if ((this.CurrentRatioField.Equals(value) != true)) {
                    this.CurrentRatioField = value;
                    this.RaisePropertyChanged("CurrentRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DilutedEPS {
            get {
                return this.DilutedEPSField;
            }
            set {
                if ((this.DilutedEPSField.Equals(value) != true)) {
                    this.DilutedEPSField = value;
                    this.RaisePropertyChanged("DilutedEPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EBITDA {
            get {
                return this.EBITDAField;
            }
            set {
                if ((this.EBITDAField.Equals(value) != true)) {
                    this.EBITDAField = value;
                    this.RaisePropertyChanged("EBITDA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EnterpriseValue {
            get {
                return this.EnterpriseValueField;
            }
            set {
                if ((this.EnterpriseValueField.Equals(value) != true)) {
                    this.EnterpriseValueField = value;
                    this.RaisePropertyChanged("EnterpriseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EnterpriseValueToEBITDARatio {
            get {
                return this.EnterpriseValueToEBITDARatioField;
            }
            set {
                if ((this.EnterpriseValueToEBITDARatioField.Equals(value) != true)) {
                    this.EnterpriseValueToEBITDARatioField = value;
                    this.RaisePropertyChanged("EnterpriseValueToEBITDARatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EnterpriseValueToRevenueRatio {
            get {
                return this.EnterpriseValueToRevenueRatioField;
            }
            set {
                if ((this.EnterpriseValueToRevenueRatioField.Equals(value) != true)) {
                    this.EnterpriseValueToRevenueRatioField = value;
                    this.RaisePropertyChanged("EnterpriseValueToRevenueRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ForwardPE {
            get {
                return this.ForwardPEField;
            }
            set {
                if ((this.ForwardPEField.Equals(value) != true)) {
                    this.ForwardPEField = value;
                    this.RaisePropertyChanged("ForwardPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GrossProfit {
            get {
                return this.GrossProfitField;
            }
            set {
                if ((this.GrossProfitField.Equals(value) != true)) {
                    this.GrossProfitField = value;
                    this.RaisePropertyChanged("GrossProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LeveredFreeCashFlow {
            get {
                return this.LeveredFreeCashFlowField;
            }
            set {
                if ((this.LeveredFreeCashFlowField.Equals(value) != true)) {
                    this.LeveredFreeCashFlowField = value;
                    this.RaisePropertyChanged("LeveredFreeCashFlow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MarketCap {
            get {
                return this.MarketCapField;
            }
            set {
                if ((this.MarketCapField.Equals(value) != true)) {
                    this.MarketCapField = value;
                    this.RaisePropertyChanged("MarketCap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NetIncomeAvltoCommon {
            get {
                return this.NetIncomeAvltoCommonField;
            }
            set {
                if ((this.NetIncomeAvltoCommonField.Equals(value) != true)) {
                    this.NetIncomeAvltoCommonField = value;
                    this.RaisePropertyChanged("NetIncomeAvltoCommon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OperatingCashFlow {
            get {
                return this.OperatingCashFlowField;
            }
            set {
                if ((this.OperatingCashFlowField.Equals(value) != true)) {
                    this.OperatingCashFlowField = value;
                    this.RaisePropertyChanged("OperatingCashFlow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OperatingMargin {
            get {
                return this.OperatingMarginField;
            }
            set {
                if ((this.OperatingMarginField.Equals(value) != true)) {
                    this.OperatingMarginField = value;
                    this.RaisePropertyChanged("OperatingMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PEGRatio {
            get {
                return this.PEGRatioField;
            }
            set {
                if ((this.PEGRatioField.Equals(value) != true)) {
                    this.PEGRatioField = value;
                    this.RaisePropertyChanged("PEGRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceBookRatio {
            get {
                return this.PriceBookRatioField;
            }
            set {
                if ((this.PriceBookRatioField.Equals(value) != true)) {
                    this.PriceBookRatioField = value;
                    this.RaisePropertyChanged("PriceBookRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceSalesRatio {
            get {
                return this.PriceSalesRatioField;
            }
            set {
                if ((this.PriceSalesRatioField.Equals(value) != true)) {
                    this.PriceSalesRatioField = value;
                    this.RaisePropertyChanged("PriceSalesRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ProfitMargin {
            get {
                return this.ProfitMarginField;
            }
            set {
                if ((this.ProfitMarginField.Equals(value) != true)) {
                    this.ProfitMarginField = value;
                    this.RaisePropertyChanged("ProfitMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> QtrlyEarningsGrowth {
            get {
                return this.QtrlyEarningsGrowthField;
            }
            set {
                if ((this.QtrlyEarningsGrowthField.Equals(value) != true)) {
                    this.QtrlyEarningsGrowthField = value;
                    this.RaisePropertyChanged("QtrlyEarningsGrowth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> QtrlyRevenueGrowth {
            get {
                return this.QtrlyRevenueGrowthField;
            }
            set {
                if ((this.QtrlyRevenueGrowthField.Equals(value) != true)) {
                    this.QtrlyRevenueGrowthField = value;
                    this.RaisePropertyChanged("QtrlyRevenueGrowth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ReturnOnAssets {
            get {
                return this.ReturnOnAssetsField;
            }
            set {
                if ((this.ReturnOnAssetsField.Equals(value) != true)) {
                    this.ReturnOnAssetsField = value;
                    this.RaisePropertyChanged("ReturnOnAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ReturnOnEquity {
            get {
                return this.ReturnOnEquityField;
            }
            set {
                if ((this.ReturnOnEquityField.Equals(value) != true)) {
                    this.ReturnOnEquityField = value;
                    this.RaisePropertyChanged("ReturnOnEquity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Revenue {
            get {
                return this.RevenueField;
            }
            set {
                if ((this.RevenueField.Equals(value) != true)) {
                    this.RevenueField = value;
                    this.RaisePropertyChanged("Revenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RevenuePerShare {
            get {
                return this.RevenuePerShareField;
            }
            set {
                if ((this.RevenuePerShareField.Equals(value) != true)) {
                    this.RevenuePerShareField = value;
                    this.RaisePropertyChanged("RevenuePerShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Statistics {
            get {
                return this.StatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatisticsField, value) != true)) {
                    this.StatisticsField = value;
                    this.RaisePropertyChanged("Statistics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCash {
            get {
                return this.TotalCashField;
            }
            set {
                if ((this.TotalCashField.Equals(value) != true)) {
                    this.TotalCashField = value;
                    this.RaisePropertyChanged("TotalCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCashPerShare {
            get {
                return this.TotalCashPerShareField;
            }
            set {
                if ((this.TotalCashPerShareField.Equals(value) != true)) {
                    this.TotalCashPerShareField = value;
                    this.RaisePropertyChanged("TotalCashPerShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalDebt {
            get {
                return this.TotalDebtField;
            }
            set {
                if ((this.TotalDebtField.Equals(value) != true)) {
                    this.TotalDebtField = value;
                    this.RaisePropertyChanged("TotalDebt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalDebtToEquityRatio {
            get {
                return this.TotalDebtToEquityRatioField;
            }
            set {
                if ((this.TotalDebtToEquityRatioField.Equals(value) != true)) {
                    this.TotalDebtToEquityRatioField = value;
                    this.RaisePropertyChanged("TotalDebtToEquityRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TrailingAnnualDividendYield {
            get {
                return this.TrailingAnnualDividendYieldField;
            }
            set {
                if ((this.TrailingAnnualDividendYieldField.Equals(value) != true)) {
                    this.TrailingAnnualDividendYieldField = value;
                    this.RaisePropertyChanged("TrailingAnnualDividendYield");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TrailingPE {
            get {
                return this.TrailingPEField;
            }
            set {
                if ((this.TrailingPEField.Equals(value) != true)) {
                    this.TrailingPEField = value;
                    this.RaisePropertyChanged("TrailingPE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockScannerService.IStockScannerService", CallbackContract=typeof(StockScanner.UI.StockScannerService.IStockScannerServiceCallback))]
    public interface IStockScannerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/GetMarketsData", ReplyAction="http://tempuri.org/IStockScannerService/GetMarketsDataResponse")]
        StockScanner.UI.StockScannerService.Market[] GetMarketsData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/GetMarketsData", ReplyAction="http://tempuri.org/IStockScannerService/GetMarketsDataResponse")]
        System.Threading.Tasks.Task<StockScanner.UI.StockScannerService.Market[]> GetMarketsDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockScannerService/GetCompanyData")]
        void GetCompanyData(StockScanner.UI.StockScannerService.Company company);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockScannerService/GetCompanyData")]
        System.Threading.Tasks.Task GetCompanyDataAsync(StockScanner.UI.StockScannerService.Company company);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockScannerService/GetStockData")]
        void GetStockData(StockScanner.UI.StockScannerService.Company company);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockScannerService/GetStockData")]
        System.Threading.Tasks.Task GetStockDataAsync(StockScanner.UI.StockScannerService.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/GetCalculatedCompanyData", ReplyAction="http://tempuri.org/IStockScannerService/GetCalculatedCompanyDataResponse")]
        StockScanner.UI.StockScannerService.CalculatedData GetCalculatedCompanyData(StockScanner.UI.StockScannerService.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/GetCalculatedCompanyData", ReplyAction="http://tempuri.org/IStockScannerService/GetCalculatedCompanyDataResponse")]
        System.Threading.Tasks.Task<StockScanner.UI.StockScannerService.CalculatedData> GetCalculatedCompanyDataAsync(StockScanner.UI.StockScannerService.Company company);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockScannerService/GetSectorData")]
        void GetSectorData(StockScanner.UI.StockScannerService.Market market);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockScannerService/GetSectorData")]
        System.Threading.Tasks.Task GetSectorDataAsync(StockScanner.UI.StockScannerService.Market market);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockScannerService/GetCompanies")]
        void GetCompanies(StockScanner.UI.StockScannerService.Industry industry);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockScannerService/GetCompanies")]
        System.Threading.Tasks.Task GetCompaniesAsync(StockScanner.UI.StockScannerService.Industry industry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/GetDividends", ReplyAction="http://tempuri.org/IStockScannerService/GetDividendsResponse")]
        System.Data.DataTable GetDividends(StockScanner.UI.StockScannerService.Sector sector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/GetDividends", ReplyAction="http://tempuri.org/IStockScannerService/GetDividendsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDividendsAsync(StockScanner.UI.StockScannerService.Sector sector);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockScannerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/PushStockData", ReplyAction="http://tempuri.org/IStockScannerService/PushStockDataResponse")]
        void PushStockData(StockScanner.UI.StockScannerService.StockQuote result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/PushCompanyData", ReplyAction="http://tempuri.org/IStockScannerService/PushCompanyDataResponse")]
        void PushCompanyData(StockScanner.UI.StockScannerService.CompanyStatistics result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/PushSectors", ReplyAction="http://tempuri.org/IStockScannerService/PushSectorsResponse")]
        void PushSectors(StockScanner.UI.StockScannerService.Sector[] sectors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockScannerService/PushCompanies", ReplyAction="http://tempuri.org/IStockScannerService/PushCompaniesResponse")]
        void PushCompanies(StockScanner.UI.StockScannerService.Company[] data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockScannerServiceChannel : StockScanner.UI.StockScannerService.IStockScannerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockScannerServiceClient : System.ServiceModel.DuplexClientBase<StockScanner.UI.StockScannerService.IStockScannerService>, StockScanner.UI.StockScannerService.IStockScannerService {
        
        public StockScannerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public StockScannerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public StockScannerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StockScannerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StockScannerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public StockScanner.UI.StockScannerService.Market[] GetMarketsData() {
            return base.Channel.GetMarketsData();
        }
        
        public System.Threading.Tasks.Task<StockScanner.UI.StockScannerService.Market[]> GetMarketsDataAsync() {
            return base.Channel.GetMarketsDataAsync();
        }
        
        public void GetCompanyData(StockScanner.UI.StockScannerService.Company company) {
            base.Channel.GetCompanyData(company);
        }
        
        public System.Threading.Tasks.Task GetCompanyDataAsync(StockScanner.UI.StockScannerService.Company company) {
            return base.Channel.GetCompanyDataAsync(company);
        }
        
        public void GetStockData(StockScanner.UI.StockScannerService.Company company) {
            base.Channel.GetStockData(company);
        }
        
        public System.Threading.Tasks.Task GetStockDataAsync(StockScanner.UI.StockScannerService.Company company) {
            return base.Channel.GetStockDataAsync(company);
        }
        
        public StockScanner.UI.StockScannerService.CalculatedData GetCalculatedCompanyData(StockScanner.UI.StockScannerService.Company company) {
            return base.Channel.GetCalculatedCompanyData(company);
        }
        
        public System.Threading.Tasks.Task<StockScanner.UI.StockScannerService.CalculatedData> GetCalculatedCompanyDataAsync(StockScanner.UI.StockScannerService.Company company) {
            return base.Channel.GetCalculatedCompanyDataAsync(company);
        }
        
        public void GetSectorData(StockScanner.UI.StockScannerService.Market market) {
            base.Channel.GetSectorData(market);
        }
        
        public System.Threading.Tasks.Task GetSectorDataAsync(StockScanner.UI.StockScannerService.Market market) {
            return base.Channel.GetSectorDataAsync(market);
        }
        
        public void GetCompanies(StockScanner.UI.StockScannerService.Industry industry) {
            base.Channel.GetCompanies(industry);
        }
        
        public System.Threading.Tasks.Task GetCompaniesAsync(StockScanner.UI.StockScannerService.Industry industry) {
            return base.Channel.GetCompaniesAsync(industry);
        }
        
        public System.Data.DataTable GetDividends(StockScanner.UI.StockScannerService.Sector sector) {
            return base.Channel.GetDividends(sector);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDividendsAsync(StockScanner.UI.StockScannerService.Sector sector) {
            return base.Channel.GetDividendsAsync(sector);
        }
    }
}
